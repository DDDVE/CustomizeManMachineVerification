// Code generated by goctl. DO NOT EDIT!
// Source: output.proto

package outputclient

import (
	"context"

	"rpc/types/output"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	OutputRequest  = output.OutputRequest
	OutputResponse = output.OutputResponse

	Output interface {
		GetItem(ctx context.Context, in *OutputRequest, opts ...grpc.CallOption) (*OutputResponse, error)
	}

	defaultOutput struct {
		cli zrpc.Client
	}
)

func NewOutput(cli zrpc.Client) Output {
	return &defaultOutput{
		cli: cli,
	}
}

func (m *defaultOutput) GetItem(ctx context.Context, in *OutputRequest, opts ...grpc.CallOption) (*OutputResponse, error) {
	client := output.NewOutputClient(m.cli.Conn())
	return client.GetItem(ctx, in, opts...)
}
