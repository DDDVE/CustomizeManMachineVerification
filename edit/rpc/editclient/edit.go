// Code generated by goctl. DO NOT EDIT!
// Source: edit.proto

package editclient

import (
	"context"

	"rpc/types/edit"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ItemRequest      = edit.ItemRequest
	ItemResponse     = edit.ItemResponse
	UserInfoRequest  = edit.UserInfoRequest
	UserInfoResponse = edit.UserInfoResponse

	Edit interface {
		SubmitItem(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*ItemResponse, error)
		UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
	}

	defaultEdit struct {
		cli zrpc.Client
	}
)

func NewEdit(cli zrpc.Client) Edit {
	return &defaultEdit{
		cli: cli,
	}
}

func (m *defaultEdit) SubmitItem(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*ItemResponse, error) {
	client := edit.NewEditClient(m.cli.Conn())
	return client.SubmitItem(ctx, in, opts...)
}

func (m *defaultEdit) UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := edit.NewEditClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}
