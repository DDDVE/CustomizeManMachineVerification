// Code generated by goctl. DO NOT EDIT!
// Source: login.proto

package loginclient

import (
	"context"

	"rpc/types/login"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EmployeeRequest  = login.EmployeeRequest
	EmployeeResponse = login.EmployeeResponse
	SendMsgRequest   = login.SendMsgRequest
	SendMsgResponse  = login.SendMsgResponse

	Login interface {
		SendMsg(ctx context.Context, in *SendMsgRequest, opts ...grpc.CallOption) (*SendMsgResponse, error)
		AddEmployee(ctx context.Context, in *EmployeeRequest, opts ...grpc.CallOption) (*EmployeeResponse, error)
	}

	defaultLogin struct {
		cli zrpc.Client
	}
)

func NewLogin(cli zrpc.Client) Login {
	return &defaultLogin{
		cli: cli,
	}
}

func (m *defaultLogin) SendMsg(ctx context.Context, in *SendMsgRequest, opts ...grpc.CallOption) (*SendMsgResponse, error) {
	client := login.NewLoginClient(m.cli.Conn())
	return client.SendMsg(ctx, in, opts...)
}

func (m *defaultLogin) AddEmployee(ctx context.Context, in *EmployeeRequest, opts ...grpc.CallOption) (*EmployeeResponse, error) {
	client := login.NewLoginClient(m.cli.Conn())
	return client.AddEmployee(ctx, in, opts...)
}
